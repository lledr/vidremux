#!/bin/bash

. $HOME/bin/.env.vid

usage() {
	usageh "" "Reads queue file and processes remuxing files sequentially."
	option "d" "Dry run. Just display (in log file) what would happen."
	exit 1
}

while getopts $(flg "d") opt; do
        case $opt in
        d)
		dry=1
                ;;
        esac
        casel $opt
done

exec &>> $LVID

log "Processing queue."
while IFS='!' read -r flo vid aid sid lng dir; do
	[[ -f "$DIRVID/$flo" ]] || continue
	log "File $flo found. Processing."

	unset nsr aac esb frc sbc sbe sbn srd aue

	# For mkvmerge.
	fld="$(echo $flo | tr -cd '[:print:]')"
	fld=${fld%.*}

	$MV "$DIRVID/$flo" "$DIRVID/.$fld.ori"

	srcstreams "$DIRVID/.$fld.ori"

	[[ ${stream_channels[$aid]} -le 2 ]]               && log "Audio is not surround." && nsr=1
	[[ ${stream_codec_name[$aid]} == aac ]]            && log "Audio codec is AAC."    && nce=1
	[[ ${stream_codec_name[$aid]} == mp3 ]]            && log "Audio codec is MP3."    && nce=1
	[[ -n $sid && ${stream_codec_name[$sid]} != srt ]] && log "Subtitles are not SRT." && esb=1 

	# Dynamic variables based on static ones.
	[[ $lng == fre ]] && frc=true || frc=false

	[[ -n $sid && -z $esb ]] && sbc=1
	[[ -n $esb ]]            && sbe=1 || log "No subtitles reencoding."
	[[ -z $sid ]]            && sbn=1
	[[ -z $nsr ]]            && srd=1
	[[ -z $nsr || -z $nce ]] && aue=1 || log "No audio reencoding."

	if [[ -n $aue || -n $sbe ]]; then
		log "Reencoding streams."

		$FFMPG -i "$DIRVID/.$fld.ori" \
			${aue:+-map 0:$aid ${srd:+$FFMPG_SRD} ${FFMPG_ENC[$AUD]} "$DIRVID/.$fld.${FFMPG_EXT[$AUD]}"} \
			${sbe:+-map 0:$sid -c:s srt "$DIRVID/.$fld.srt"}

		[[ $? -ne 0 ]] && log "Could not properly reencode streams. Skip." ERR && $EXEC $0 "$@"

		[[ -n $sbe ]] && $SED -i 's/<\/\?font[^>]*>//g;s/\r$//' "$DIRVID/.$fld.srt"

		log "Streams reencoded."
	fi

	log "Remuxing MKV file."

	$MKVMRG --track-order 0:$vid${aue:+,1:0},0:$aid${sbc:+,0:$sid}${sbe:+,$((sbe + aue)):0} --disable-track-statistics-tags -o "$DIRVID/.$fld.mkv" \
		-d $vid -a $aid ${sbe:+-S} ${sbn:+-S} ${sbc:+-s $sid} --no-chapters --no-global-tags --language $vid:$lng --default-track $vid:true --forced-track $vid:false --track-name $vid: --language $aid:$lng --default-track $aid:true --forced-track $aid:false --track-name $aid: ${sbc:+--language $sid:fre --default-track $sid:true --forced-track $sid:$frc --track-name $sid:} "$DIRVID/.$fld.ori" \
		${aue:+--aac-is-sbr 0:0 --sync 0:${stream_start_pts[$aid]} --language 0:$lng --default-track 0:false --forced-track 0:false "$DIRVID/.$fld.${FFMPG_EXT[$AUD]}"} \
		${sbe:+--language 0:fre --sync 0:${stream_start_pts[$sid]} --sub-charset 0:UTF8 --default-track 0:true --forced-track 0:$frc "$DIRVID/.$fld.srt"}

	[[ $? -ne 0 ]] && log "Could not properly remux MKV file. Skip." ERR && $EXEC $0 "$@"

	log "MKV file remuxed."
	log "Move file to $dir and clean."

	$MV "$DIRVID/.$fld.mkv" "$DIRVID/$dir/$fld.mkv"
	$RM "$DIRVID/.$fld."*
	
	log "Wait for end of Plex scan tasks."
	
	while $SLEEP $TIMEPL; [[ -n $($PIDOF "Plex Media Scanner") ]]; do :; done
	
	log "Finished processing file."
	$EXEC $0 "$@"
done < $FQUEUE

log "No new task queued. Purge."
$TRUNC -s 0 $FQUEUE

log "Finished processing queue."
